---
kind: Template
apiVersion: v1
metadata:
  name: mysql-schedule-backup-to-s3
  annotations:
    openshift.io/display-name: "MySQL Schedule backup to S3"
    description: Application for schedule backup from MySQL database to S3 services
    tags: mysql,s3aws
    iconClass: icon-mysql-database
message: |-
  The following service(s) have been created in your project: ${NAME}.
labels:
  template: mysql-schedule-backup-to-s3
  app: "wordpress"
objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: "${NAME}-secret"
    labels:
      app: "wordpress-${NAME}"
  stringData:
    database-user: "${DATABASE_USER}"
    database-password: "${DATABASE_PASSWORD}"
    aws-access-key-id: "${AWS_ACCESS_KEY_ID}"
    aws-secret-access-key: "${AWS_SECRET_ACCESS_KEY}"
- kind: CronJob
  apiVersion: batch/v1beta1
  metadata:
    name: "${NAME}"
  spec:
    schedule: "${CRON_TIME}"
    jobTemplate:
      spec:
        template:
          metadata:
            name: "${NAME}"
          spec:
            containers:
            - name: backup
              image: thanhbui1133/backup_restore_s3_openshift
              imagePullPolicy: Always
              command: ["/var/lib/mysql/bin/mysql_s3_backup.sh"]
              env:
              - name: MYSQL_HOST
                value: "${DATABASE_HOST}"
              - name: MYSQL_NAME
                value: "${DATABASE_NAME}"
              - name: MYSQL_PORT
                value: "${DATABASE_PORT}"
              - name: MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: "${NAME}-secret"
                    key: database-password
              - name: MYSQL_USER
                valueFrom:
                  secretKeyRef:
                    name: "${NAME}-secret"
                    key: database-user
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: "${NAME}-secret"
                    key: aws-access-key-id
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: "${NAME}-secret"
                    key: aws-secret-access-key
              - name: AWS_BUCKET
                value: "${AWS_BUCKET_NAME}"
            restartPolicy: OnFailure
parameters:
- name: NAME
  displayName: Name of schedule job
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
- name: DATABASE_HOST
  displayName: Database Host
  required: true
  value: database_host
- name: DATABASE_PORT
  displayName: Database port
  required: true
  value: database_port  
- name: DATABASE_NAME
  displayName: Database Name
  required: true
  value: wordpress
- name: DATABASE_USER
  displayName: Database Usermysql
  required: true
  value: wordpress
- name: DATABASE_PASSWORD
  displayName: Database Password
  generate: expression
  from: "[a-zA-Z0-9]{16}"
- name: CRON_TIME
  displayName: When to run the backup cronjob
  description: Cron time string define when backup start (Ex 0 3 * * * - Run at 3am every day)
  required: true
  value: 0 3 * * *
- name: AWS_ACCESS_KEY_ID
  displayName: Amazon WebService Key ID
  required: true
  value: aws_access_key_id
- name: AWS_SECRET_ACCESS_KEY
  displayName: Amazon WebService Secret Key
  required: true
  value: aws_access_key_secret
- name: AWS_BUCKET_NAME
  displayName: Amazon WebService Bucket Name
  required: true
  value: s3://example